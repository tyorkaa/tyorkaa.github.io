{"version":3,"sources":["webpack:///./src/components/Shop/Product/index.tsx","webpack:///./src/components/Shop/index.tsx","webpack:///./src/pages/shop.tsx"],"names":["b","b_","Product","product","className","to","url","src","cover","title","price","Shop","products","map","i","key","findCover","resp","productName","edge","data","allFile","edges","filter","node","relativePath","indexOf","childImageSharp","resize","query","ShopPage","props","Layout","allProductsJson","path","sale"],"mappings":"8LAiBMA,G,UAAIC,OAAQ,iBAkBHC,EAhBmB,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QACnC,OACE,gBAAC,IAAD,CACEC,UAAWJ,IACXK,GAAIF,EAAQG,KAEZ,uBAAKF,UAAWJ,EAAE,UAChB,uBAAKO,IAAKJ,EAAQK,SAEpB,uBAAKJ,UAAWJ,EAAE,UAAWG,EAAQM,OACpCN,EAAQO,OAAS,uBAAKN,UAAWJ,EAAE,UAAWG,EAAQO,MAArC,QCvBlBV,G,UAAIC,OAAQ,SAoBHU,EAPF,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACX,2BAASR,UAAWJ,KACjBY,EACEC,KAAI,SAACV,EAASW,GAAV,OAAgB,gBAAC,EAAD,CAAaC,IAAKD,EAAGX,QAASA,SChBnDa,EAAY,SAACC,EAAgBC,GAAwB,IAClDC,EAAQF,EAAKG,KAAKC,QAAQC,MAAMC,QAAO,mBAA4D,GAA5D,EAAEC,KAAeC,aAAaC,QAAWR,EAA7B,QADD,GAEzD,OAAOC,EAAOA,EAAKK,KAAKG,gBAAgBC,OAAOrB,IAAK,IA0CzCsB,EAAQ,YA6BNC,UApCE,SAACC,GAAD,OACf,gBAACC,EAAA,EAAD,KACE,gBAAC,EAAD,CAAMpB,UAdWK,EAcWc,EAb9Bd,EAAKG,KAAKa,gBAAgBX,MAAM,GAAGE,KAAKZ,SACrCW,QAAO,SAAAC,GAAI,QAAMA,EAAKd,SACtBG,KAAI,SAAAW,GAAI,MAAK,CACZlB,IAAK,SAASkB,EAAKU,KACnB1B,MAAOQ,EAAUC,EAAMO,EAAKU,MAC5BC,OAAQX,EAAKd,MACbD,MAAOe,EAAKf,MACZC,MAAOc,EAAKd,cARE,IAACO,I","file":"component---src-pages-shop-tsx-17a23558e9d9c96cb376.js","sourcesContent":["import * as React from 'react';\nimport * as b_ from 'b_';\nimport { Link } from 'gatsby';\n\nimport './index.scss';\n\ninterface Product {\n  url: string;\n  cover: string;\n  title: string\n  price?: number\n}\n\ninterface Props {\n  product: Product\n}\n\nconst b = b_.with('shop-product');\n\nconst Product: React.SFC<Props> = ({ product }) => {\n  return (\n    <Link\n      className={b()}\n      to={product.url}\n    >\n      <div className={b(\"photo\")}>\n        <img src={product.cover} />\n      </div>\n      <div className={b('title')}>{product.title}</div>\n      {product.price && <div className={b('price')}>{product.price} â‚½</div>}\n    </Link>\n\n  );\n}\n\nexport default Product;","import * as React from 'react'\nimport * as b_ from 'b_'\nimport ProductView from './Product';\n\nimport './index.scss';\n\nconst b = b_.with('shop');\n\ninterface Product {\n  url: string;\n  cover: string;\n  title: string\n  price?: number\n}\n\ninterface Props {\n  products: Product[]\n}\n\nconst Shop = ({products}: Props) => \n  <section className={b()}>\n    {products\n      .map((product, i) => <ProductView key={i} product={product} />)}  \n  </section>\n\n\nexport default Shop;","import * as React from 'react'\nimport { AllProductsJson, AllFile } from '../types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout'\nimport Shop from '../components/Shop'\n\nconst findCover = (resp: Response, productName: string) => {\n  const [edge] = resp.data.allFile.edges.filter(({node}) => node.relativePath.indexOf(`${productName}/`) == 0 );\n  return edge ? edge.node.childImageSharp.resize.src: '';\n}\n\ntype Response = {\n  data:\n    AllFile<{\n      relativePath: string\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }> &\n    \n    AllProductsJson<{\n      id: number\n      path: string\n      price?: number\n      tags?: string[]\n      title: string\n    }>\n}\n\nconst getProducts = (resp: Response) =>\n  resp.data.allProductsJson.edges[0].node.products\n    .filter(node => !!node.price)\n    .map(node => ({\n      url: `/shop/${node.path}`,\n      cover: findCover(resp, node.path),\n      sale: !!node.price,\n      title: node.title,\n      price: node.price\n    }));\n\n\nconst ShopPage = (props: Response) => (\n  <Layout>\n    <Shop products={getProducts(props)}/>\n  </Layout>\n)\n\n\nexport const query = graphql`query{\n  allFile(filter: {relativePath: {regex: \"/cover\\\\./\"}}){\n    edges{\n      node{\n        relativePath\n        childImageSharp{\n          resize(quality:95, height: 200, width: 200){\n            src\n          }\n        }\n      }\n    }\n  }\n  allProductsJson {\n    edges {\n      node {\n        products{\n          id\n          path\n          price\n          tags\n          title\n        }\n      }\n    }\n  }\n}\n`;\n\nexport default ShopPage\n"],"sourceRoot":""}