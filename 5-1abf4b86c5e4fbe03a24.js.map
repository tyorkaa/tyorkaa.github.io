{"version":3,"sources":["webpack:///./node_modules/b_/index.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.date.to-string.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/pinch-zoom-js/src/pinch-zoom.js"],"names":["root","factory","module","exports","BemFormatter","options","this","createBemFormatter","tailSpace","elementSeparator","modSeparator","modValueSeparator","classSeparator","isFullModifier","isFullBoolValue","withMixin","block","element","modifiers","bind","apply","concat","Array","prototype","slice","call","arguments","bemFormatter","b","stringify","lock","_stringifyModifier","base","modifierKey","modifierValue","result","String","_stringifyModifiers","hasOwnProperty","className","B","anObject","__webpack_require__","that","global","ignoreCase","multiline","unicode","sticky","self","fetch","r","__webpack_exports__","d","Headers","Request","Response","DOMException","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","normalizeName","name","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","headers","map","forEach","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","callback","thisArg","keys","push","values","entries","methods","input","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","$flags","DESCRIPTORS","$toString","define","fn","RegExp","source","flags","R","f","configurable","DateProto","Date","getTime","NaN","dP","FProto","Function","nameRE","match","assign","defineProperty","target","varArgs","to","index","nextSource","nextKey","writable","from","object","triggerEvent","el","event","document","createEvent","initEvent","dispatchEvent","PinchZoom","zoomFactor","lastScale","offset","x","y","initialOffset","defaults","setupMarkup","bindEvents","update","isImageLoaded","updateAspectRatio","setupOffsets","enable","sum","a","tapZoomFactor","zoomOutFactor","animationDuration","maxZoom","minZoom","draggableUnzoomed","lockDragAxis","setOffsetsOnce","use2d","zoomStartEventName","zoomUpdateEventName","zoomEndEventName","dragStartEventName","dragUpdateEventName","dragEndEventName","doubleTapEventName","verticalPadding","horizontalPadding","handleDragStart","stopAnimation","lastDragPosition","hasInteraction","handleDrag","touch","getTouches","drag","sanitizeOffset","handleDragEnd","end","handleZoomStart","nthZoom","lastZoomCenter","handleZoom","newScale","touchCenter","getTouchCenter","scale","handleZoomEnd","handleDoubleTap","center","startZoomFactor","updateProgress","progress","scaleTo","isDoubleTap","getCurrentZoomCenter","animate","swing","computeInitialOffset","Math","abs","offsetWidth","getInitialZoomFactor","container","offsetHeight","resetOffset","nodeName","complete","naturalHeight","querySelectorAll","every","_isOffsetsSet","elWidth","elHeight","maxX","getContainerX","maxY","getContainerY","maxOffsetX","max","maxOffsetY","minOffsetX","min","minOffsetY","scaleZoomFactor","addOffset","originalZoomFactor","canDrag","expected","lastCenter","touches","getVectorAvg","vectors","v","reduce","sanitize","zoomOutAnimation","isInsaneOffset","sanitizeOffsetAnimation","sanitizedOffset","targetOffset","startOffset","unsetContainerY","setContainerY","parentElement","xZoomFactor","yZoomFactor","getAspectRatio","offsetLeft","centerX","offsetTop","rect","getBoundingClientRect","scrollTop","documentElement","scrollLeft","posTop","top","posLeft","left","pageX","pageY","duration","framefn","timefn","startTime","renderFrame","inAnimation","frameTime","requestAnimationFrame","p","cos","PI","style","height","str","tmp","implementation","createHTMLDocument","innerHTML","children","parentNode","insertBefore","appendChild","overflow","position","webkitTransformOrigin","mozTransformOrigin","msTransformOrigin","oTransformOrigin","transformOrigin","detectGestures","window","imgEl","updatePlaned","setTimeout","offsetX","offsetY","transform3d","transform2d","removeClone","removeChild","is3d","webkitTransform","mozTransform","msTransform","oTransform","transform","cloneNode","pointerEvents","enabled","disable","interaction","fingers","lastTouchStart","startTouches","setInteraction","newInteraction","updateInteraction","targetTouches","getDistance","sqrt","cancelEvent","stopPropagation","preventDefault","firstMove","time","detectDoubleTap","endTouches","startDistance","calculateScale","definePinchZoom"],"mappings":"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","file":"5-1abf4b86c5e4fbe03a24.js","sourcesContent":["/* global define: true */\n(/* istanbul ignore next */\nfunction (root, factory) {\n    'use strict';\n    if (typeof exports === 'object') {\n        // CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.b_ = factory();\n    }\n})\n(this, function () {\n    /**\n     *\n     * @param {object} [options]\n     * @param {string} [options.tailSpace='']\n     * @param {string} [options.elementSeparator='__']\n     * @param {string} [options.modSeparator='_']\n     * @param {string} [options.modValueSeparator='_']\n     * @param {string} [options.classSeparator=' ']\n     * @param {string} [options.isFullModifier=true]\n     * @param {string} [options.isFullBoolValue=false]\n     *\n     * @constructor\n     */\n    function BemFormatter(options) {\n        // Case call BemFormatter() without new\n        if (!(this instanceof  BemFormatter)) {\n            return createBemFormatter(options);\n        }\n\n        options = options || {};\n        this.tailSpace = options.tailSpace || '';\n        this.elementSeparator = options.elementSeparator || '__';\n        this.modSeparator = options.modSeparator || '_';\n        this.modValueSeparator = options.modValueSeparator || '_';\n        this.classSeparator = options.classSeparator || ' ';\n        this.isFullModifier = typeof options.isFullModifier === 'undefined' ? true : options.isFullModifier;\n        this.isFullBoolValue = typeof options.isFullBoolValue === 'undefined' ? false : options.isFullBoolValue;\n    }\n\n    BemFormatter.prototype = {\n        /**\n         *\n         * @param {string} base\n         * @param {string} modifierKey\n         * @param {*} modifierValue\n         * @returns {string}\n         * @private\n         */\n        _stringifyModifier: function (base, modifierKey, modifierValue) {\n            var result = '';\n\n            // Ignore undefined values\n            if (typeof modifierValue === 'undefined') {\n                return result;\n            }\n\n            // If not using full bools ignore false values\n            if (!this.isFullBoolValue && modifierValue === false) {\n                return result;\n            }\n\n            // Makes block__elem_{modifierKey}\n            result += this.classSeparator + base + this.modSeparator + modifierKey;\n\n            // If not using full bools skip true `modifierValue`\n            if (this.isFullBoolValue || modifierValue !== true) {\n                // Makes block__elem_{modifierKey}_{modifierValue}\n                result += this.modValueSeparator + String(modifierValue);\n            }\n\n            return result;\n        },\n\n        /**\n         *\n         * @param {string} base\n         * @param {object} modifiers\n         * @returns {string}\n         * @private\n         */\n        _stringifyModifiers: function (base, modifiers) {\n            var result = '';\n\n            if (!this.isFullModifier) {\n                base = '';\n            }\n\n            for (var modifierKey in modifiers) {\n                if (!modifiers.hasOwnProperty(modifierKey)) {\n                    continue;\n                }\n\n                result += this._stringifyModifier(base, modifierKey, modifiers[modifierKey]);\n            }\n\n            return result;\n        },\n\n        /**\n         *\n         * @param {string} block\n         * @param {string} [element]\n         * @param {object} [modifiers]\n         */\n        stringify: function (block, element, modifiers) {\n            var className = String(block);\n\n            // case b_(block, modifiers)\n            if (element && typeof element === 'object' && typeof modifiers === 'undefined') {\n                modifiers = element;\n                element = null;\n            }\n\n            if (element) {\n                className += this.elementSeparator + String(element);\n            }\n\n            if (modifiers) {\n                className += this._stringifyModifiers(className, modifiers);\n            }\n\n            return className + this.tailSpace;\n        }\n    };\n\n    /**\n     * Return partially applied b_\n     *\n     * @param {string} block\n     * @param {string} [element]\n     * @param {object} [modifiers]\n     * @returns {Function} partially applied b_\n     *\n     * @example\n     *\n     * ```jsx\n     * var B = require('b_');\n     * var b = B.with('b-button');\n     * var e = B.with('b-button', 'elem');\n     *\n     * function render() {\n         *   return (\n         *     <div className={b()}>\n         *       <span className={b('icon', {type: 'add'})}></span>\n         *       <span className={b('text')}></span>\n         *     </div>\n         *     <div className={b({size: 'small'})}>\n         *       <span className={b('icon', {type: 'add'})}></span>\n         *       <span className={b('text')}></span>\n         *     </div>\n         *   );\n         * }\n     * ```\n     */\n    function withMixin(block, element, modifiers) {\n        return this.bind.apply(this, [null].concat(Array.prototype.slice.call(arguments)));\n    }\n\n    /**\n     * @param {object} [options]\n     * @returns {function}\n     *\n     * @private\n     */\n    function createBemFormatter(options) {\n        var bemFormatter = new BemFormatter(options);\n\n        var b = bemFormatter.stringify.bind(bemFormatter);\n        b['with'] = b.lock = withMixin;\n\n        return b;\n    }\n\n    /**\n     *\n     * @type {function(this:BemFormatter)}\n     *\n     * @example\n     *\n     * var v = require('b_');\n     *\n     * b('block'); // 'block'\n     * b('block', {mod1: true, mod2: false, mod3: 'mod3'}); // 'block block_mod1 block_mod3_mod3'\n     * b('block', 'elem'); // 'block__elem'\n     * b('block', 'elem', {mod1: true, mod2: false, mod3: 'mod3'}); // 'block__elem block__elem_mod1 block__elem_mod3_mod3'\n     */\n    var b = createBemFormatter();\n\n    /**\n     *\n     * @type {BemFormatter}\n     *\n     * @example\n     *\n     * var b = new (require('b_').B)({\n     *   tailSpace: ' ',\n     *   elementSeparator: '-',\n     *   modSeparator: '--',\n     *   modValueSeparator: '-',\n     *   classSeparator: ' '\n     * });\n     *\n     * b.stringify('block'); // 'block '\n     * b.stringify('block', {mod1: true, mod2: false, mod3: 'mod3'}); // 'block block--mod1 block--mod3-mod3 '\n     * b.stringify('block', 'elem'); // 'block-elem '\n     * b.stringify('block', 'elem', {mod1: true, mod2: false, mod3: 'mod3'}); // 'block-elem block-elem--mod1 block-elem--mod3-mod3'\n     */\n    b.B = BemFormatter;\n\n    return b;\n});\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/*\n\n    PinchZoom.js\n    Copyright (c) Manuel Stofer 2013 - today\n\n    Author: Manuel Stofer (mst@rtp.ch)\n    Version: 2.3.0\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n\n*/\n\n// polyfills\nif (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) { // .length of function is 2\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n\nif (typeof Array.from != 'function') {\n  Array.from = function (object) {\n    return [].slice.call(object);\n  };\n}\n\n// utils\nvar buildElement = function(str) {\n  // empty string as title argument required by IE and Edge\n  var tmp = document.implementation.createHTMLDocument('');\n  tmp.body.innerHTML = str;\n  return Array.from(tmp.body.children)[0];\n};\n\nvar triggerEvent = function(el, name) {\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent(name, true, false);\n  el.dispatchEvent(event);\n};\n\nvar definePinchZoom = function () {\n\n    /**\n     * Pinch zoom\n     * @param el\n     * @param options\n     * @constructor\n     */\n    var PinchZoom = function (el, options) {\n            this.el = el;\n            this.zoomFactor = 1;\n            this.lastScale = 1;\n            this.offset = {\n                x: 0,\n                y: 0\n            };\n            this.initialOffset = {\n                x: 0,\n                y: 0,\n            };\n            this.options = Object.assign({}, this.defaults, options);\n            this.setupMarkup();\n            this.bindEvents();\n            this.update();\n\n            // The image may already be loaded when PinchZoom is initialized,\n            // and then the load event (which trigger update) will never fire.\n            if (this.isImageLoaded(this.el)) {\n              this.updateAspectRatio();\n              this.setupOffsets();\n            }\n\n            this.enable();\n\n        },\n        sum = function (a, b) {\n            return a + b;\n        },\n        isCloseTo = function (value, expected) {\n            return value > expected - 0.01 && value < expected + 0.01;\n        };\n\n    PinchZoom.prototype = {\n\n        defaults: {\n            tapZoomFactor: 2,\n            zoomOutFactor: 1.3,\n            animationDuration: 300,\n            maxZoom: 4,\n            minZoom: 0.5,\n            draggableUnzoomed: true,\n            lockDragAxis: false,\n            setOffsetsOnce: false,\n            use2d: true,\n            zoomStartEventName: 'pz_zoomstart',\n            zoomUpdateEventName: 'pz_zoomupdate',\n            zoomEndEventName: 'pz_zoomend',\n            dragStartEventName: 'pz_dragstart',\n            dragUpdateEventName: 'pz_dragupdate',\n            dragEndEventName: 'pz_dragend',\n            doubleTapEventName: 'pz_doubletap',\n            verticalPadding: 0,\n            horizontalPadding: 0,\n        },\n\n        /**\n         * Event handler for 'dragstart'\n         * @param event\n         */\n        handleDragStart: function (event) {\n            triggerEvent(this.el, this.options.dragStartEventName);\n            this.stopAnimation();\n            this.lastDragPosition = false;\n            this.hasInteraction = true;\n            this.handleDrag(event);\n        },\n\n        /**\n         * Event handler for 'drag'\n         * @param event\n         */\n        handleDrag: function (event) {\n            var touch = this.getTouches(event)[0];\n            this.drag(touch, this.lastDragPosition);\n            this.offset = this.sanitizeOffset(this.offset);\n            this.lastDragPosition = touch;\n        },\n\n        handleDragEnd: function () {\n            triggerEvent(this.el, this.options.dragEndEventName);\n            this.end();\n        },\n\n        /**\n         * Event handler for 'zoomstart'\n         * @param event\n         */\n        handleZoomStart: function (event) {\n            triggerEvent(this.el, this.options.zoomStartEventName);\n            this.stopAnimation();\n            this.lastScale = 1;\n            this.nthZoom = 0;\n            this.lastZoomCenter = false;\n            this.hasInteraction = true;\n        },\n\n        /**\n         * Event handler for 'zoom'\n         * @param event\n         */\n        handleZoom: function (event, newScale) {\n            // a relative scale factor is used\n            var touchCenter = this.getTouchCenter(this.getTouches(event)),\n                scale = newScale / this.lastScale;\n            this.lastScale = newScale;\n\n            // the first touch events are thrown away since they are not precise\n            this.nthZoom += 1;\n            if (this.nthZoom > 3) {\n\n                this.scale(scale, touchCenter);\n                this.drag(touchCenter, this.lastZoomCenter);\n            }\n            this.lastZoomCenter = touchCenter;\n        },\n\n        handleZoomEnd: function () {\n            triggerEvent(this.el, this.options.zoomEndEventName);\n            this.end();\n        },\n\n        /**\n         * Event handler for 'doubletap'\n         * @param event\n         */\n        handleDoubleTap: function (event) {\n            var center = this.getTouches(event)[0],\n                zoomFactor = this.zoomFactor > 1 ? 1 : this.options.tapZoomFactor,\n                startZoomFactor = this.zoomFactor,\n                updateProgress = (function (progress) {\n                    this.scaleTo(startZoomFactor + progress * (zoomFactor - startZoomFactor), center);\n                }).bind(this);\n\n            if (this.hasInteraction) {\n                return;\n            }\n\n            this.isDoubleTap = true;\n\n            if (startZoomFactor > zoomFactor) {\n                center = this.getCurrentZoomCenter();\n            }\n\n            this.animate(this.options.animationDuration, updateProgress, this.swing);\n            triggerEvent(this.el, this.options.doubleTapEventName);\n        },\n\n        /**\n         * Compute the initial offset\n         *\n         * the element should be centered in the container upon initialization\n         */\n        computeInitialOffset: function () {\n            this.initialOffset = {\n                x: -Math.abs(this.el.offsetWidth * this.getInitialZoomFactor() - this.container.offsetWidth) / 2,\n                y: -Math.abs(this.el.offsetHeight * this.getInitialZoomFactor() - this.container.offsetHeight) / 2,\n            };\n        },\n\n        /**\n         * Reset current image offset to that of the initial offset\n         */\n        resetOffset: function() {\n            this.offset.x = this.initialOffset.x;\n            this.offset.y = this.initialOffset.y;\n        },\n\n        /**\n         * Determine if image is loaded\n         */\n        isImageLoaded: function (el) {\n            if (el.nodeName === 'IMG') {\n              return el.complete && el.naturalHeight !== 0;\n            } else {\n              return Array.from(el.querySelectorAll('img')).every(this.isImageLoaded);\n            }\n        },\n\n        setupOffsets: function() {\n            if (this.options.setOffsetsOnce && this._isOffsetsSet) {\n              return;\n            }\n\n            this._isOffsetsSet = true;\n\n            this.computeInitialOffset();\n            this.resetOffset();\n        },\n\n        /**\n         * Max / min values for the offset\n         * @param offset\n         * @return {Object} the sanitized offset\n         */\n        sanitizeOffset: function (offset) {\n            var elWidth = this.el.offsetWidth * this.getInitialZoomFactor() * this.zoomFactor;\n            var elHeight = this.el.offsetHeight * this.getInitialZoomFactor() * this.zoomFactor;\n            var maxX = elWidth - this.getContainerX() + this.options.horizontalPadding,\n                maxY = elHeight -  this.getContainerY() + this.options.verticalPadding,\n                maxOffsetX = Math.max(maxX, 0),\n                maxOffsetY = Math.max(maxY, 0),\n                minOffsetX = Math.min(maxX, 0) - this.options.horizontalPadding,\n                minOffsetY = Math.min(maxY, 0) - this.options.verticalPadding;\n\n            return {\n                x: Math.min(Math.max(offset.x, minOffsetX), maxOffsetX),\n                y: Math.min(Math.max(offset.y, minOffsetY), maxOffsetY)\n            };\n        },\n\n        /**\n         * Scale to a specific zoom factor (not relative)\n         * @param zoomFactor\n         * @param center\n         */\n        scaleTo: function (zoomFactor, center) {\n            this.scale(zoomFactor / this.zoomFactor, center);\n        },\n\n        /**\n         * Scales the element from specified center\n         * @param scale\n         * @param center\n         */\n        scale: function (scale, center) {\n            scale = this.scaleZoomFactor(scale);\n            this.addOffset({\n                x: (scale - 1) * (center.x + this.offset.x),\n                y: (scale - 1) * (center.y + this.offset.y)\n            });\n            triggerEvent(this.el, this.options.zoomUpdateEventName);\n        },\n\n        /**\n         * Scales the zoom factor relative to current state\n         * @param scale\n         * @return the actual scale (can differ because of max min zoom factor)\n         */\n        scaleZoomFactor: function (scale) {\n            var originalZoomFactor = this.zoomFactor;\n            this.zoomFactor *= scale;\n            this.zoomFactor = Math.min(this.options.maxZoom, Math.max(this.zoomFactor, this.options.minZoom));\n            return this.zoomFactor / originalZoomFactor;\n        },\n\n        /**\n         * Determine if the image is in a draggable state\n         *\n         * When the image can be dragged, the drag event is acted upon and cancelled.\n         * When not draggable, the drag event bubbles through this component.\n         *\n         * @return {Boolean}\n         */\n        canDrag: function () {\n            return this.options.draggableUnzoomed || !isCloseTo(this.zoomFactor, 1);\n        },\n\n        /**\n         * Drags the element\n         * @param center\n         * @param lastCenter\n         */\n        drag: function (center, lastCenter) {\n            if (lastCenter) {\n              if(this.options.lockDragAxis) {\n                // lock scroll to position that was changed the most\n                if(Math.abs(center.x - lastCenter.x) > Math.abs(center.y - lastCenter.y)) {\n                  this.addOffset({\n                    x: -(center.x - lastCenter.x),\n                    y: 0\n                  });\n                }\n                else {\n                  this.addOffset({\n                    y: -(center.y - lastCenter.y),\n                    x: 0\n                  });\n                }\n              }\n              else {\n                this.addOffset({\n                  y: -(center.y - lastCenter.y),\n                  x: -(center.x - lastCenter.x)\n                });\n              }\n              triggerEvent(this.el, this.options.dragUpdateEventName);\n            }\n        },\n\n        /**\n         * Calculates the touch center of multiple touches\n         * @param touches\n         * @return {Object}\n         */\n        getTouchCenter: function (touches) {\n            return this.getVectorAvg(touches);\n        },\n\n        /**\n         * Calculates the average of multiple vectors (x, y values)\n         */\n        getVectorAvg: function (vectors) {\n            return {\n                x: vectors.map(function (v) { return v.x; }).reduce(sum) / vectors.length,\n                y: vectors.map(function (v) { return v.y; }).reduce(sum) / vectors.length\n            };\n        },\n\n        /**\n         * Adds an offset\n         * @param offset the offset to add\n         * @return return true when the offset change was accepted\n         */\n        addOffset: function (offset) {\n            this.offset = {\n                x: this.offset.x + offset.x,\n                y: this.offset.y + offset.y\n            };\n        },\n\n        sanitize: function () {\n            if (this.zoomFactor < this.options.zoomOutFactor) {\n                this.zoomOutAnimation();\n            } else if (this.isInsaneOffset(this.offset)) {\n                this.sanitizeOffsetAnimation();\n            }\n        },\n\n        /**\n         * Checks if the offset is ok with the current zoom factor\n         * @param offset\n         * @return {Boolean}\n         */\n        isInsaneOffset: function (offset) {\n            var sanitizedOffset = this.sanitizeOffset(offset);\n            return sanitizedOffset.x !== offset.x ||\n                sanitizedOffset.y !== offset.y;\n        },\n\n        /**\n         * Creates an animation moving to a sane offset\n         */\n        sanitizeOffsetAnimation: function () {\n            var targetOffset = this.sanitizeOffset(this.offset),\n                startOffset = {\n                    x: this.offset.x,\n                    y: this.offset.y\n                },\n                updateProgress = (function (progress) {\n                    this.offset.x = startOffset.x + progress * (targetOffset.x - startOffset.x);\n                    this.offset.y = startOffset.y + progress * (targetOffset.y - startOffset.y);\n                    this.update();\n                }).bind(this);\n\n            this.animate(\n                this.options.animationDuration,\n                updateProgress,\n                this.swing\n            );\n        },\n\n        /**\n         * Zooms back to the original position,\n         * (no offset and zoom factor 1)\n         */\n        zoomOutAnimation: function () {\n            if (this.zoomFactor === 1) {\n                return;\n            }\n\n            var startZoomFactor = this.zoomFactor,\n                zoomFactor = 1,\n                center = this.getCurrentZoomCenter(),\n                updateProgress = (function (progress) {\n                    this.scaleTo(startZoomFactor + progress * (zoomFactor - startZoomFactor), center);\n                }).bind(this);\n\n            this.animate(\n                this.options.animationDuration,\n                updateProgress,\n                this.swing\n            );\n        },\n\n        /**\n         * Updates the container aspect ratio\n         *\n         * Any previous container height must be cleared before re-measuring the\n         * parent height, since it depends implicitly on the height of any of its children\n         */\n        updateAspectRatio: function () {\n            this.unsetContainerY();\n            this.setContainerY(this.container.parentElement.offsetHeight);\n        },\n\n        /**\n         * Calculates the initial zoom factor (for the element to fit into the container)\n         * @return {number} the initial zoom factor\n         */\n        getInitialZoomFactor: function () {\n            var xZoomFactor = this.container.offsetWidth / this.el.offsetWidth;\n            var yZoomFactor = this.container.offsetHeight / this.el.offsetHeight;\n\n            return Math.min(xZoomFactor, yZoomFactor);\n        },\n\n        /**\n         * Calculates the aspect ratio of the element\n         * @return the aspect ratio\n         */\n        getAspectRatio: function () {\n            return this.el.offsetWidth / this.el.offsetHeight;\n        },\n\n        /**\n         * Calculates the virtual zoom center for the current offset and zoom factor\n         * (used for reverse zoom)\n         * @return {Object} the current zoom center\n         */\n        getCurrentZoomCenter: function () {\n            var offsetLeft = this.offset.x - this.initialOffset.x;\n            var centerX = -1 * this.offset.x - offsetLeft / (1 / this.zoomFactor - 1);\n\n            var offsetTop = this.offset.y - this.initialOffset.y;\n            var centerY = -1 * this.offset.y - offsetTop / (1 / this.zoomFactor - 1);\n\n            return {\n                x: centerX,\n                y: centerY\n            };\n        },\n\n        /**\n         * Returns the touches of an event relative to the container offset\n         * @param event\n         * @return array touches\n         */\n        getTouches: function (event) {\n            var rect = this.container.getBoundingClientRect();\n            var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n            var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n            var posTop = rect.top + scrollTop;\n            var posLeft = rect.left + scrollLeft;\n\n            return Array.prototype.slice.call(event.touches).map(function (touch) {\n                return {\n                    x: touch.pageX - posLeft,\n                    y: touch.pageY - posTop,\n                };\n            });\n        },\n\n        /**\n         * Animation loop\n         * does not support simultaneous animations\n         * @param duration\n         * @param framefn\n         * @param timefn\n         * @param callback\n         */\n        animate: function (duration, framefn, timefn, callback) {\n            var startTime = new Date().getTime(),\n                renderFrame = (function () {\n                    if (!this.inAnimation) { return; }\n                    var frameTime = new Date().getTime() - startTime,\n                        progress = frameTime / duration;\n                    if (frameTime >= duration) {\n                        framefn(1);\n                        if (callback) {\n                            callback();\n                        }\n                        this.update();\n                        this.stopAnimation();\n                        this.update();\n                    } else {\n                        if (timefn) {\n                            progress = timefn(progress);\n                        }\n                        framefn(progress);\n                        this.update();\n                        requestAnimationFrame(renderFrame);\n                    }\n                }).bind(this);\n            this.inAnimation = true;\n            requestAnimationFrame(renderFrame);\n        },\n\n        /**\n         * Stops the animation\n         */\n        stopAnimation: function () {\n            this.inAnimation = false;\n        },\n\n        /**\n         * Swing timing function for animations\n         * @param p\n         * @return {Number}\n         */\n        swing: function (p) {\n            return -Math.cos(p * Math.PI) / 2  + 0.5;\n        },\n\n        getContainerX: function () {\n            return this.container.offsetWidth;\n        },\n\n        getContainerY: function () {\n            return this.container.offsetHeight;\n        },\n\n        setContainerY: function (y) {\n            return this.container.style.height = y + 'px';\n        },\n\n        unsetContainerY: function () {\n            this.container.style.height = null;\n        },\n\n        /**\n         * Creates the expected html structure\n         */\n        setupMarkup: function () {\n            this.container = buildElement('<div class=\"pinch-zoom-container\"></div>');\n            this.el.parentNode.insertBefore(this.container, this.el);\n            this.container.appendChild(this.el);\n\n            this.container.style.overflow = 'hidden';\n            this.container.style.position = 'relative';\n\n            this.el.style.webkitTransformOrigin = '0% 0%';\n            this.el.style.mozTransformOrigin = '0% 0%';\n            this.el.style.msTransformOrigin = '0% 0%';\n            this.el.style.oTransformOrigin = '0% 0%';\n            this.el.style.transformOrigin = '0% 0%';\n\n            this.el.style.position = 'absolute';\n        },\n\n        end: function () {\n            this.hasInteraction = false;\n            this.sanitize();\n            this.update();\n        },\n\n        /**\n         * Binds all required event listeners\n         */\n        bindEvents: function () {\n            var self = this;\n            detectGestures(this.container, this);\n\n            window.addEventListener('resize', this.update.bind(this));\n            Array.from(this.el.querySelectorAll('img')).forEach(function(imgEl) {\n              imgEl.addEventListener('load', self.update.bind(self));\n            });\n\n            if (this.el.nodeName === 'IMG') {\n              this.el.addEventListener('load', this.update.bind(this));\n            }\n        },\n\n        /**\n         * Updates the css values according to the current zoom factor and offset\n         */\n        update: function (event) {\n            if (this.updatePlaned) {\n                return;\n            }\n            this.updatePlaned = true;\n\n            window.setTimeout((function () {\n                this.updatePlaned = false;\n\n                if (event && event.type === 'resize') {\n                    this.updateAspectRatio();\n                    this.setupOffsets();\n                }\n\n                if (event && event.type === 'load') {\n                  this.updateAspectRatio();\n                  this.setupOffsets();\n                }\n\n                var zoomFactor = this.getInitialZoomFactor() * this.zoomFactor,\n                    offsetX = -this.offset.x / zoomFactor,\n                    offsetY = -this.offset.y / zoomFactor,\n                    transform3d =   'scale3d('     + zoomFactor + ', '  + zoomFactor + ',1) ' +\n                        'translate3d(' + offsetX    + 'px,' + offsetY    + 'px,0px)',\n                    transform2d =   'scale('       + zoomFactor + ', '  + zoomFactor + ') ' +\n                        'translate('   + offsetX    + 'px,' + offsetY    + 'px)',\n                    removeClone = (function () {\n                        if (this.clone) {\n                            this.clone.parentNode.removeChild(this.clone);\n                            delete this.clone;\n                        }\n                    }).bind(this);\n\n                // Scale 3d and translate3d are faster (at least on ios)\n                // but they also reduce the quality.\n                // PinchZoom uses the 3d transformations during interactions\n                // after interactions it falls back to 2d transformations\n                if (!this.options.use2d || this.hasInteraction || this.inAnimation) {\n                    this.is3d = true;\n                    removeClone();\n\n                    this.el.style.webkitTransform = transform3d;\n                    this.el.style.mozTransform = transform2d;\n                    this.el.style.msTransform = transform2d;\n                    this.el.style.oTransform = transform2d;\n                    this.el.style.transform = transform3d;\n                } else {\n                    // When changing from 3d to 2d transform webkit has some glitches.\n                    // To avoid this, a copy of the 3d transformed element is displayed in the\n                    // foreground while the element is converted from 3d to 2d transform\n                    if (this.is3d) {\n                        this.clone = this.el.cloneNode(true);\n                        this.clone.style.pointerEvents = 'none';\n                        this.container.appendChild(this.clone);\n                        window.setTimeout(removeClone, 200);\n                    }\n\n                    this.el.style.webkitTransform = transform2d;\n                    this.el.style.mozTransform = transform2d;\n                    this.el.style.msTransform = transform2d;\n                    this.el.style.oTransform = transform2d;\n                    this.el.style.transform = transform2d;\n\n                    this.is3d = false;\n                }\n            }).bind(this), 0);\n        },\n\n        /**\n         * Enables event handling for gestures\n         */\n        enable: function() {\n          this.enabled = true;\n        },\n\n        /**\n         * Disables event handling for gestures\n         */\n        disable: function() {\n          this.enabled = false;\n        }\n    };\n\n    var detectGestures = function (el, target) {\n        var interaction = null,\n            fingers = 0,\n            lastTouchStart = null,\n            startTouches = null,\n\n            setInteraction = function (newInteraction, event) {\n                if (interaction !== newInteraction) {\n\n                    if (interaction && !newInteraction) {\n                        switch (interaction) {\n                            case \"zoom\":\n                                target.handleZoomEnd(event);\n                                break;\n                            case 'drag':\n                                target.handleDragEnd(event);\n                                break;\n                        }\n                    }\n\n                    switch (newInteraction) {\n                        case 'zoom':\n                            target.handleZoomStart(event);\n                            break;\n                        case 'drag':\n                            target.handleDragStart(event);\n                            break;\n                    }\n                }\n                interaction = newInteraction;\n            },\n\n            updateInteraction = function (event) {\n                if (fingers === 2) {\n                    setInteraction('zoom');\n                } else if (fingers === 1 && target.canDrag()) {\n                    setInteraction('drag', event);\n                } else {\n                    setInteraction(null, event);\n                }\n            },\n\n            targetTouches = function (touches) {\n                return Array.from(touches).map(function (touch) {\n                    return {\n                        x: touch.pageX,\n                        y: touch.pageY\n                    };\n                });\n            },\n\n            getDistance = function (a, b) {\n                var x, y;\n                x = a.x - b.x;\n                y = a.y - b.y;\n                return Math.sqrt(x * x + y * y);\n            },\n\n            calculateScale = function (startTouches, endTouches) {\n                var startDistance = getDistance(startTouches[0], startTouches[1]),\n                    endDistance = getDistance(endTouches[0], endTouches[1]);\n                return endDistance / startDistance;\n            },\n\n            cancelEvent = function (event) {\n                event.stopPropagation();\n                event.preventDefault();\n            },\n\n            detectDoubleTap = function (event) {\n                var time = (new Date()).getTime();\n\n                if (fingers > 1) {\n                    lastTouchStart = null;\n                }\n\n                if (time - lastTouchStart < 300) {\n                    cancelEvent(event);\n\n                    target.handleDoubleTap(event);\n                    switch (interaction) {\n                        case \"zoom\":\n                            target.handleZoomEnd(event);\n                            break;\n                        case 'drag':\n                            target.handleDragEnd(event);\n                            break;\n                    }\n                } else {\n                    target.isDoubleTap = false;\n                }\n\n                if (fingers === 1) {\n                    lastTouchStart = time;\n                }\n            },\n            firstMove = true;\n\n        el.addEventListener('touchstart', function (event) {\n            if(target.enabled) {\n                firstMove = true;\n                fingers = event.touches.length;\n                detectDoubleTap(event);\n            }\n        });\n\n        el.addEventListener('touchmove', function (event) {\n            if(target.enabled && !target.isDoubleTap) {\n                if (firstMove) {\n                    updateInteraction(event);\n                    if (interaction) {\n                        cancelEvent(event);\n                    }\n                    startTouches = targetTouches(event.touches);\n                } else {\n                    switch (interaction) {\n                        case 'zoom':\n                            target.handleZoom(event, calculateScale(startTouches, targetTouches(event.touches)));\n                            break;\n                        case 'drag':\n                            target.handleDrag(event);\n                            break;\n                    }\n                    if (interaction) {\n                        cancelEvent(event);\n                        target.update();\n                    }\n                }\n\n                firstMove = false;\n            }\n        });\n\n        el.addEventListener('touchend', function (event) {\n            if(target.enabled) {\n                fingers = event.touches.length;\n                updateInteraction(event);\n            }\n        });\n    };\n\n    return PinchZoom;\n};\n\nvar PinchZoom = definePinchZoom();\n\nexport default PinchZoom;\n"],"sourceRoot":""}