{"version":3,"sources":["webpack:///./src/hooks/md.ts","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.find.js"],"names":["useDescription","productName","lng","useSelector","state","app","locale","data","pattern","RegExp","result","allMarkdownRemark","edges","find","node","test","fileAbsolutePath","title","frontmatter","html","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","it","keys","i","length","$export","$find","forced","Array","P","F","callbackfn","arguments"],"mappings":"0uWAaaA,EAAiB,SAACC,GAAwB,MAE/CC,EAAMC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,IAAIC,UAElDC,EAAO,OAgBPC,EAAU,IAAIC,OAAJ,IAAgBR,EAAhB,IAAgCC,EAAhC,OAA4C,KAEtDQ,EAASH,EAAKI,kBAAkBC,MAAMC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,QAC7CN,EAAQO,KAAKD,EAAKE,kBAAoB,OAG1C,MAAO,CACLC,OAAOP,SAAA,UAAAA,EAAQI,KAAKI,mBAAb,eAA0BD,QAAS,GAC1CE,MAAMT,aAAA,EAAAA,EAAQI,KAAKK,OAAQ,M,0+UCzC/B,IAAIC,EAAS,EAAQ,QACjBC,EAAoB,EAAQ,QAC5BC,EAAK,EAAQ,QAAgBC,EAC7BC,EAAO,EAAQ,QAAkBD,EACjCE,EAAW,EAAQ,QACnBC,EAAS,EAAQ,QACjBC,EAAUP,EAAOX,OACjBmB,EAAOD,EACPE,EAAQF,EAAQG,UAChBC,EAAM,KACNC,EAAM,KAENC,EAAc,IAAIN,EAAQI,KAASA,EAEvC,GAAI,EAAQ,WAAuBE,GAAe,EAAQ,OAAR,EAAoB,WAGpE,OAFAD,EAAI,EAAQ,OAAR,CAAkB,WAAY,EAE3BL,EAAQI,IAAQA,GAAOJ,EAAQK,IAAQA,GAA4B,QAArBL,EAAQI,EAAK,SAC/D,CACHJ,EAAU,SAAgBO,EAAGX,GAC3B,IAAIY,EAAOC,gBAAgBT,EACvBU,EAAOZ,EAASS,GAChBI,OAAYC,IAANhB,EACV,OAAQY,GAAQE,GAAQH,EAAEM,cAAgBb,GAAWW,EAAMJ,EACvDb,EAAkBY,EAChB,IAAIL,EAAKS,IAASC,EAAMJ,EAAEO,OAASP,EAAGX,GACtCK,GAAMS,EAAOH,aAAaP,GAAWO,EAAEO,OAASP,EAAGG,GAAQC,EAAMZ,EAAOgB,KAAKR,GAAKX,GACpFY,EAAOC,KAAOP,EAAOF,IAS3B,IAPA,IAAIgB,EAAQ,SAAUC,GACpBA,KAAOjB,GAAWL,EAAGK,EAASiB,EAAK,CACjCC,cAAc,EACdC,IAAK,WAAc,OAAOlB,EAAKgB,IAC/BG,IAAK,SAAUC,GAAMpB,EAAKgB,GAAOI,MAG5BC,EAAOzB,EAAKI,GAAOsB,EAAI,EAAGD,EAAKE,OAASD,GAAIP,EAAMM,EAAKC,MAChErB,EAAMW,YAAcb,EACpBA,EAAQG,UAAYD,EACpB,EAAQ,OAAR,CAAuBT,EAAQ,SAAUO,GAG3C,EAAQ,OAAR,CAA0B,W,kCCxC1B,IAAIyB,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CzC,KAAM,SAAc6C,GAClB,OAAOL,EAAMjB,KAAMsB,EAAYC,UAAUR,OAAS,EAAIQ,UAAU,QAAKpB,MAGzE,EAAQ,OAAR,CATU","file":"014b550059daab0b48742cf9c186d71132b325b0-7b9a9966fc1f5348c946.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\";\nimport { MdQuery } from '../../gatsby-graphql';\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../state/reducer\";\n\ntype N<T> = NonNullable<T>;\n\ntype MD = MdQuery['allMarkdownRemark']['edges'][number]['node']\n\ninterface Description {\n  [lng: string]: MD\n}\n\nexport const useDescription = (productName: string) => {\n\n  const lng = useSelector((state: RootState) => state.app.locale);\n\n  const data = useStaticQuery<MdQuery>(graphql`\n    query MD {\n      allMarkdownRemark{\n        edges {\n          node {\n            fileAbsolutePath\n            frontmatter {\n              title\n              path\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n  const pattern = new RegExp(`\\/${productName}\\/${lng}\\.md$`, 'i');\n\n  const result = data.allMarkdownRemark.edges.find(({ node }) => \n    !!pattern.test(node.fileAbsolutePath || '')\n  );\n\n  return {\n    title: result?.node.frontmatter?.title || '',\n    html: result?.node.html || ''\n  }\n}","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}