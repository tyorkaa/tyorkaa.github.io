{"version":3,"sources":["webpack:///./src/components/Product/index.tsx","webpack:///./src/templates/product.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.find.js"],"names":["b","b_","Product","id","pics","title","price","useDispatch","className","src","preview","query","formatPics","data","slides","allFile","edges","map","node","name","relativePath","split","slideProps","find","slide","childImageSharp","resize","original","ProductPage","pathContext","description","slug","Layout","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined"],"mappings":"uOAeMA,G,oBAAIC,OAAQ,YAiCHC,EA/BmB,SAAC,GAA6B,EAA5BC,GAA4B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAClCC,cAGjB,OACE,uBAAKC,UAAWR,KACd,+BACE,uBAAKQ,UAAWR,EAAE,UAChB,uBAAKS,IAAKL,EAAK,GAAGM,QAAQD,QAI9B,+BACE,uBAAKD,UAAWR,EAAE,WAChB,uBAAKQ,UAAWR,EAAE,UACfK,GAGFC,GAAS,uBAAKE,UAAWR,EAAE,UACzBM,EADO,MAIV,2BACE,0BAAQE,UAAWR,EAAE,QAArB,2B,YCiBCW,EAAQ,aA4BfC,EAAa,SAACC,EAAYC,GAAb,OACjBD,EAAKE,QAAQC,MAAMC,KAAI,YAAc,IAAXC,EAAW,EAAXA,KAClBC,EAAOD,EAAKE,aAAaC,MAAM,KAAK,GACpCC,EAAaR,EAAOS,MAAK,SAAAC,GAAK,OAAIA,EAAMrB,KAAOgB,KAErD,sBACEA,OACAT,QAASQ,EAAKO,gBAAgBC,OAC9BC,SAAUT,EAAKO,gBAAgBE,UAC5BL,OAIMM,UApDK,SAAC,GAGR,QAFXC,YAAmBxB,GAER,EAFIF,GAEJ,EAFQE,OAAoBC,GAE5B,EAFewB,YAEf,EAF4BxB,OAAaQ,GAEzC,EAFmCiB,KAEnC,EAFyCjB,QACpDD,EACW,EADXA,KAEA,OACE,gBAACmB,EAAA,EAAD,KACE,gBAAC,EAAD,CAAS5B,KAAMQ,EAAWC,EAAMC,GAAST,MAAOA,EAAOC,MAAOA,O,kCClDpE,IAAI2B,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CZ,KAAM,SAAcgB,GAClB,OAAOL,EAAMM,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,OAAR,CATU","file":"component---src-templates-product-tsx-90dc8b6557c2f2373c37.js","sourcesContent":["import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as b_ from 'b_';\nimport { Slide } from '../Single/types';\nimport { actions } from '../../state/actions';\n\nimport './index.scss';\n\ninterface Props {\n  id: number\n  pics: Slide[];\n  title: string\n  price?: number\n}\n\nconst b = b_.with('product');\n\nconst Product: React.SFC<Props> = ({id, pics, title, price}) => {\n  const dispatch = useDispatch();\n\n  const addToCart = () => dispatch(actions.addToCart(id))\n  return (\n    <div className={b()}>\n      <section>\n        <div className={b('photo')}>\n          <img src={pics[0].preview.src} />\n        </div>\n      </section>\n\n      <section>\n        <div className={b('column')}>\n          <div className={b('title')}>\n            {title}\n          </div>\n\n          {price && <div className={b('price')}>\n            {price} ₽\n          </div>}\n\n          <div>\n            <button className={b('btn')} >Добавить в корзину</button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Product","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Product from '../components/Product'\nimport { AllFile } from '../types'\nimport { Image } from '../components/Single/types'\nimport Layout from '../components/Layout'\n\ntype Data = AllFile<{\n  name: string\n  relativePath: string\n  childImageSharp: {\n    resize: {\n      src: string\n      width: number\n      height: number\n    }\n    original: {\n      src: string\n      width: number\n      height: number\n    }\n  }\n}>\n\ninterface Slide {\n  id: string\n  name: string\n  preview: Image\n  original: Image\n  positionX: number\n  positionY: number\n  size: number\n}\n\ninterface Props {\n  pathContext: {\n    id: number\n    slug: string\n    title: string\n    description?: string\n    price?: number\n    slides: Slide[]\n  }\n  data: Data\n}\n\nconst ProductPage = ({\n  pathContext: { id, title, description, price, slug, slides },\n  data,\n}: Props) => {\n  return (\n    <Layout>\n      <Product pics={formatPics(data, slides)} title={title} price={price} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    allFile(\n      filter: { relativeDirectory: { eq: $slug }, extension: { ne: \"html\" } }\n    ) {\n      edges {\n        node {\n          name\n          relativePath\n          childImageSharp {\n            resize(height: 200, width: 200, quality: 95) {\n              src\n              width\n              height\n            }\n\n            original {\n              src\n              width\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst formatPics = (data: Data, slides: Slide[]) =>\n  data.allFile.edges.map(({ node }) => {\n    const name = node.relativePath.split('/')[1]\n    const slideProps = slides.find(slide => slide.id === name)\n\n    return {\n      name,\n      preview: node.childImageSharp.resize,\n      original: node.childImageSharp.original,\n      ...slideProps,\n    }\n  })\n\nexport default ProductPage\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}